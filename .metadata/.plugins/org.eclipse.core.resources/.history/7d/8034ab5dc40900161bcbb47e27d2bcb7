package kmeans;
import java.util.ArrayList;
import java.util.Comparator;

public class ColorScheme {
	public int numberColors;
	public int degreesBetweenHues;
	String name;
	
	public ColorScheme(){
	}
	
	public ColorScheme(String name, ArrayList<HSLColor> colors){
		if(name.equals("Complementary")){
			numberColors = 2;
			degreesBetweenHues = 180;
			this.name = name;
		}
	}
	
	public static ColorScheme findScheme(ArrayList<HSLColor> colors){
			HSLColor c1 = colors.get(0);
			HSLColor c2 = colors.get(1);
			if(c1.getDegreesBetween(c2) >= 165){
				ColorScheme ret = new ColorScheme("Complementary", colors);
				return ret;
			}
			else if(c1.getDegreesBetween(c2) >= 140){
				ColorScheme ret = new ColorScheme("Split Complementary", colors);
				return ret;
			}
			else if(c1.getDegreesBetween(c2) >= 110){
				ColorScheme ret = new ColorScheme("Triad", colors);
				return ret;
			}
			else if(c1.getDegreesBetween(c2) >= 80){
				ColorScheme ret = new ColorScheme("Tetradic", colors);
				return ret;
			}
			else if(c1.getDegreesBetween(c2) > 60){
				ColorScheme ret = new ColorScheme("Split Complementary", colors);
				return ret;
			}
			else return new ColorScheme("Analagous", colors);
	}
	
	public String getName(){
		return name;
	}
}
